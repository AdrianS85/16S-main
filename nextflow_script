// nextflow run -with-report nextflow_report/report -with-trace nextflow_report/trace -with-timeline nextflow_report/timeline -with-dag nextflow_report/flowchart -name analysis_step_by_step nextflow_script
// nextflow run nextflow_script -with-report nextflow_report/report -with-trace nextflow_report/trace -with-timeline nextflow_report/timeline -resume
// run pre_nextflow_script.sh

DIR_data_q = 'nx_data_q'
DIR_data_q_vis = 'nx_data_q/vis'
DIR_data_q_vis_freq = 'nx_data_q/vis/freq'
DIR_data_q_vis_seq = 'nx_data_q/vis/seq'
DIR_data_q_temp = 'nx_data_q/temp'
DIR_data_q_temp_vis = 'nx_data_q/temp/vis'
DIR_phyl = 'nx_phylogeny'
DIR_tax = 'nx_taxonomy'
DIR_tax_vis = 'nx_taxonomy/vis'
DIR_div = 'nx_diversity'
DIR_div_alpha = 'nx_diversity/alpha'
DIR_div_alpha_vis = 'nx_diversity/alpha/vis'
DIR_div_beta = 'nx_diversity/beta'
DIR_div_beta_pcoa = 'nx_diversity/beta/pcoa'
DIR_div_beta_pcoa_vis = 'nx_diversity/beta/pcoa/vis'
DIR_div_beta_pcoa_bp = 'nx_diversity/beta/pcoa_bp'
DIR_div_beta_pcoa_bp_vis = 'nx_diversity/beta/pcoa_bp/vis'
DIR_div_beta_corr = 'nx_diversity/beta/corr'
DIR_div_beta_stat_adonis = 'nx_diversity/beta/corr/adonis'
DIR_div_beta_stat_permdisp = 'nx_diversity/beta/corr/permdisp'
DIR_div_beta_stat_corr = 'nx_diversity/beta/corr/corr'
DIR_div_temp = 'nx_diversity/temp'




	


METADATA = file('metadata_enhanced.tsv')
NB_OF_SAMPLES = 33
SAMPLING_DEPTH = 1
MAX_RAREFACTION_DEPTH = 100000

import_fastq_manifest = file('qiime_manifest.tsv')
import_fastq_data_type = 'SampleData[PairedEndSequencesWithQuality]'
import_fastq_format = 'PairedEndFastqManifestPhred33V2'
import_fastq_cores = 25

deblur_prep_cores = 8
deblur_prep_minovlen = 110
deblur_prep_maxdiffs = 20

dada2_trim_f = 17
dada2_trim_r = 21
dada2_trunc_f = 268
dada2_trunc_r = 218
dada2_threads = 15

deblur_prep_front_f = 'CCTACGGGNGGCWGCAG'
deblur_prep_front_r = 'GACTACHVGGGTATCTAATCC'
deblur_prep_adapter_f = 'GGATTAGATACCCBDGTAGTC'
deblur_prep_adapter_r = 'CTGCWGCCNCCCGTAGG'
deblur_jobs = 15
deblur_trim_length = 401

phylogeny_file = file('phylogeny/sepp-refs-silva-128.qza')
phylogeny_threads = 15

taxonomy_ref_reads = file('prepare_taxonomy/silva-138.1-ssu-nr99-seqs-341f-785r-derep-uniq.qza')
taxonomy_ref_tax = file('prepare_taxonomy/silva-138.1-ssu-nr99-tax-341f-785r-derep-uniq.qza')
taxonomy_weight = file('prepare_taxonomy/gut-341f-785r-classifier.qza')
taxonomy_threads = 3

filtering_min_frequency = 10
filtering_min_samples = 11

diversity_std_sampling_depth = 24267 // This is the value of lowest sample in deblur. could be specified for each sample type individually, but why bother.
diversity_std_threads = 2














process metadata_vis {
	publishDir path: DIR_data_q_vis, mode: 'copy'

	input:
		file METADATA
	output:
		file 'qiime_metadata.qzv'

	"""
	qiime metadata tabulate --m-input-file ${METADATA} --o-visualization qiime_metadata.qzv
	"""}




















process import_fastq {

	cpus import_fastq_cores
	
	publishDir path: DIR_data_q, mode: 'copy', pattern: '*qza'
	publishDir path: DIR_data_q_vis, mode: 'copy', pattern: '*qzv'
	
	input:
		file import_fastq_manifest

	output:
		file 'primary_input.qza' into import_fastq_out
		file 'primary_input.qzv'

	"""
	qiime tools import \
		--type ${import_fastq_data_type} \
		--input-path ${import_fastq_manifest} \
		--output-path primary_input.qza \
		--input-format ${import_fastq_format}
		
	qiime demux summarize --i-data primary_input.qza --o-visualization primary_input.qzv
	"""}
	



















	
//In trim-paired read 2 znajduje zawsze oba adaptery. wierd. Może spróbować obniżyć max error to 1 - --p-error-rate 0.05? 
process deblur_prep {

	cpus deblur_prep_cores

	publishDir path: DIR_data_q_temp, mode: 'copy', pattern: '*qza'
	publishDir path: DIR_data_q_vis, mode: 'copy', pattern: '{*log,*qzv}'
	
	input:
		file primary_input from import_fastq_out
	output:
		file 'qa_joined_noadapter_for_deblur_SampleDataSequencesWithQuality.qza' into deblur_prep_out
		tuple file('noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.qza'), file('joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.qza'), file('*log'), file('*QualityFilterStats.qza'), file('*.qzv')

		"""
		qiime cutadapt trim-paired \
			--i-demultiplexed-sequences ${primary_input} \
			--p-cores ${deblur_prep_cores} \
			--p-front-f ${deblur_prep_front_f} \
			--p-front-r ${deblur_prep_front_r} \
			--p-adapter-f ${deblur_prep_adapter_f} \
			--p-adapter-r ${deblur_prep_adapter_r} \
			--p-match-adapter-wildcards True \
			--p-discard-untrimmed True \
			--p-error-rate 0.05 \
			--o-trimmed-sequences noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.qza \
			--verbose > report_noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.log
		
		qiime demux summarize --i-data noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.qza --o-visualization noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.qzv
		
		

		qiime vsearch join-pairs \
			--i-demultiplexed-seqs noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.qza \
			--p-threads ${deblur_prep_cores} \
			--p-minovlen ${deblur_prep_minovlen} \
			--p-maxdiffs ${deblur_prep_maxdiffs} \
			--o-joined-sequences joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.qza \
			--verbose &> report_joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.log
			
		qiime demux summarize --i-data joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.qza --o-visualization joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.qzv		
		
		

		qiime quality-filter q-score \
			--i-demux joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.qza \
			--o-filtered-sequences qa_joined_noadapter_for_deblur_SampleDataSequencesWithQuality.qza \
			--o-filter-stats qa_joined_noadapter_for_deblur_QualityFilterStats.qza
			
		qiime metadata tabulate --m-input-file qa_joined_noadapter_for_deblur_QualityFilterStats.qza --o-visualization qa_joined_noadapter_for_deblur_QualityFilterStats.qzv
			
		qiime demux summarize --i-data qa_joined_noadapter_for_deblur_SampleDataSequencesWithQuality.qza --o-visualization qa_joined_noadapter_for_deblur_SampleDataSequencesWithQuality.qzv
		"""}
	
	



	
















process deblur {

	cpus deblur_jobs

	publishDir path: DIR_data_q, mode: 'copy', pattern: '*Feature*'
	publishDir path: DIR_data_q_temp, mode: 'copy', pattern: '*DeblurStats.qza'
	publishDir path: DIR_data_q_vis, mode: 'copy', pattern: '*qzv'
	
	input:
		file deblur_prep_out
		
	output:
		tuple file('*FeatureDataSequence.qza'), file('*FeatureTableFrequency.qza') into (deblur_for_sepp, deblur_for_filt, deblur_for_qa_f, deblur_for_qa_s, deblur_for_break, deblur_for_div, deblur_for_divnet)
		file("*SampleDataDeblurStats*")
		

		"""
		qiime deblur denoise-16S \
			--i-demultiplexed-seqs ${deblur_prep_out} \
			--p-trim-length ${deblur_trim_length} \
			--p-left-trim-len 0 \
			--p-sample-stats True \
			--p-jobs-to-start ${deblur_jobs} \
			--p-no-hashed-feature-ids \
			--o-table deblur.FeatureTableFrequency.qza \
			--o-representative-sequences deblur.FeatureDataSequence.qza \
			--o-stats deblur.SampleDataDeblurStats.qza

		qiime deblur visualize-stats --i-deblur-stats deblur.SampleDataDeblurStats.qza --o-visualization deblur.SampleDataDeblurStats.qzv
		"""}






















// Sample F5 (low-read) doesnt pass filter well in dada2 - according to fastqc - its phred scores are poorer than those of other samples. It must be removed after all.



process dada2 {

	cpus dada2_threads

	publishDir path: DIR_data_q, mode: 'copy', pattern: '*Feature*'
	publishDir path: DIR_data_q_temp, mode: 'copy', pattern: '*DADA2Stats.qza'
	publishDir path: DIR_data_q_vis, mode: 'copy', pattern: '*qzv'

	input:
		file primary_input from import_fastq_out
	output:
		tuple file('*FeatureDataSequence.qza'), file('*FeatureTableFrequency.qza') into (dada2_for_sepp, dada2_for_filt, dada2_for_qa_f, dada2_for_qa_s, dada2_for_break, dada2_for_div, dada2_for_divnet)
		file('*SampleDataDADA2Stats*')

	"""
	qiime dada2 denoise-paired \
		--i-demultiplexed-seqs ${primary_input} \
		--p-trim-left-f ${dada2_trim_f} \
		--p-trim-left-r ${dada2_trim_r} \
		--p-trunc-len-f ${dada2_trunc_f} \
		--p-trunc-len-r ${dada2_trunc_r} \
		--p-max-ee-f 2 \
		--p-max-ee-r 2 \
		--p-pooling-method "pseudo" \
		--p-chimera-method "consensus" \
		--p-n-threads ${dada2_threads} \
		--p-no-hashed-feature-ids \
		--o-table dada2.FeatureTableFrequency.qza \
		--o-representative-sequences dada2.FeatureDataSequence.qza \
		--o-denoising-stats dada2.SampleDataDADA2Stats.qza
		
	qiime metadata tabulate --m-input-file dada2.SampleDataDADA2Stats.qza --o-visualization dada2.SampleDataDADA2Stats.qzv
	"""}






















//dada2_for_sepp.concat(deblur_for_sepp).flatten().toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten().collate(2).view()
process phylogeny {

	cpus phylogeny_threads

	publishDir path: DIR_phyl, mode: 'copy', pattern: '{*PhylogenyRooted.qza,*Placements.qza}'
	publishDir path: DIR_data_q, mode: 'copy', pattern: 'sepp*Feature*'
	publishDir path: DIR_data_q_temp, mode: 'copy', pattern: 'removed_sepp_*'
	
	input:
		tuple file(seq), file(freq) from dada2_for_sepp.concat(deblur_for_sepp).flatten().toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten().collate(2)
		
	output:
		file "sepp_*PhylogenyRooted.qza" into (phylogeny_for_div)
		file "sepp_*Placements.qza"
		tuple file("sepp_*FeatureDataSequence.qza"), file("sepp_*FeatureTableFrequency.qza") into (sepp_for_filt, sepp_for_qa_f, sepp_for_qa_s, sepp_for_div)
		file "removed_sepp_*FeatureTableFrequency.qza"

		"""
		qiime fragment-insertion sepp \
			--i-representative-sequences ${seq} \
			--i-reference-database ${phylogeny_file} \
			--p-threads ${phylogeny_threads} \
			--o-tree sepp_${freq.simpleName}.PhylogenyRooted.qza \
			--o-placements sepp_${freq.simpleName}.Placements.qza

		qiime fragment-insertion filter-features \
			--i-table ${freq} \
			--i-tree sepp_${freq.simpleName}.PhylogenyRooted.qza \
			--o-filtered-table sepp_${freq.simpleName}.FeatureTableFrequency.qza \
			--o-removed-table removed_sepp_${freq.simpleName}.FeatureTableFrequency.qza

		qiime feature-table filter-seqs \
			--i-data ${seq} \
			--i-table sepp_${freq.simpleName}.FeatureTableFrequency.qza \
			--o-filtered-data sepp_${freq.simpleName}.FeatureDataSequence.qza
		"""}	
	
	









	
	
	
	
	
	
	
	
	

//dada2_for_filt.concat(deblur_for_filt, sepp_for_filt).flatten().toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten().collate(2).view()
process filtering {
	publishDir path: DIR_data_q, mode: 'copy'
	
	input:
		tuple file(seq), file(freq) from dada2_for_filt.concat(deblur_for_filt, sepp_for_filt).flatten().toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten().collate(2)
		
	output:
		tuple file("filtered_*FeatureDataSequence.qza"), file("filtered_*FeatureTableFrequency.qza") into (filt_for_tax, filt_for_qa_f, filt_for_qa_s, filt_for_div)

		"""
		qiime feature-table filter-features \
			--i-table ${freq} \
			--p-min-frequency ${filtering_min_frequency} \
			--p-min-samples ${filtering_min_samples} \
			--o-filtered-table filtered_${freq.simpleName}.FeatureTableFrequency.qza
			
		qiime feature-table filter-seqs \
			--i-data ${seq} \
			--i-table filtered_${freq.simpleName}.FeatureTableFrequency.qza \
			--o-filtered-data filtered_${freq.simpleName}.FeatureDataSequence.qza
		"""}	


















	
	
	
	










/*
qiime feature-classifier classify-sklearn \
	--i-classifier ${taxonomy_weight} \
	--i-reads ${seq} \
	--o-classification bespoke_nb_${freq.simpleName}.FeatureDataTaxonomy.qza
	
qiime taxa barplot \
	--i-table ${freq} \
	--i-taxonomy bespoke_nb_${freq.simpleName}.FeatureDataTaxonomy.qza \
	--m-metadata-file ${METADATA} \
	--o-visualization bespoke_nb_${freq.simpleName}.FeatureDataTaxonomy.qzv

qiime taxa collapse \
	--i-table ${freq} \
	--i-taxonomy bespoke_nb_${freq.simpleName}.FeatureDataTaxonomy.qza \
	--p-level {} \
	--o-collapsed-table taxonomy/collapse/'lev_'{}'_bespoke_nb_${freq.simpleName}.FeatureTableFrequency.qza 
*/
process taxonomy {

	cpus taxonomy_threads

	publishDir path: DIR_tax, mode: 'copy', pattern: '*Taxonomy.qza'
	publishDir path: DIR_tax_vis, mode: 'copy', pattern: '*Taxonomy.qzv'
	publishDir path: DIR_data_q, mode: 'copy', pattern: 'lev_*Frequency.qza'
	
	input:
		tuple file(seq), file(freq) from filt_for_tax

	output:
		file "*FeatureDataTaxonomy.qza"
		file "*FeatureDataTaxonomy.qzv"
		file "*FeatureTableFrequency.qza" into (tax_for_qa_f, tax_for_div)

		"""
		qiime feature-classifier classify-consensus-vsearch \
			--i-query ${seq} \
			--i-reference-reads ${taxonomy_ref_reads} \
			--i-reference-taxonomy ${taxonomy_ref_tax} \
			--p-threads ${taxonomy_threads} \
			--o-classification vsearch_${freq.simpleName}.FeatureDataTaxonomy.qza

		qiime taxa barplot \
			--i-table ${freq} \
			--i-taxonomy vsearch_${freq.simpleName}.FeatureDataTaxonomy.qza \
			--m-metadata-file ${METADATA} \
			--o-visualization vsearch_${freq.simpleName}.FeatureDataTaxonomy.qzv
		
		parallel " \
		qiime taxa collapse \
			--i-table ${freq} \
			--i-taxonomy vsearch_${freq.simpleName}.FeatureDataTaxonomy.qza \
			--p-level {} \
			--o-collapsed-table lev_{}_vsearch_${freq.simpleName}.FeatureTableFrequency.qza \
		" ::: 2 3 4 5 6 7
		"""}



/*
qiime feature-classifier classify-sklearn \
	--i-classifier ${taxonomy_weight} \
	--i-reads ${seq} \
	--o-classification bespoke_nb_${freq.simpleName}.FeatureDataTaxonomy.qza 
*/
//I think that collect is responsible for "waiting" for all processes to finish
process taxonomy_for_divnet {

	cpus taxonomy_threads

	publishDir path: DIR_tax, mode: 'copy', pattern: '*Taxonomy.qza'
	
	input:
		file seq from dada2_for_divnet.concat(deblur_for_divnet).collect().flatten().filter( ~/.*Sequence.*/)
		
	output:
		file "*FeatureDataTaxonomy.qza" into tax_divnet_for_qa_f

		"""
		qiime feature-classifier classify-consensus-vsearch \
			--i-query ${seq} \
			--i-reference-reads ${taxonomy_ref_reads} \
			--i-reference-taxonomy ${taxonomy_ref_tax} \
			--p-threads ${taxonomy_threads} \
			--o-classification for_divnet_vsearch_${seq.simpleName}.FeatureDataTaxonomy.qza
		"""}



























process qa_f {
	publishDir path: DIR_data_q_vis_freq, mode: 'copy'
	
	input:
		
		file freq from deblur_for_qa_f.concat(dada2_for_qa_f, sepp_for_qa_f, filt_for_qa_f, tax_for_qa_f, tax_divnet_for_qa_f)
			.collect()
			.flatten()
			.unique()
			.filter( ~/.*Frequency.*/ ) 


	output:
		file "*FeatureTableFrequency.qzv"

		"""
		qiime feature-table summarize --i-table ${freq} --o-visualization ${freq.simpleName}.FeatureTableFrequency.qzv
		"""}



process qa_s {
	publishDir path: DIR_data_q_vis_seq, mode: 'copy'
	
	input:
	
		file seq from deblur_for_qa_s.concat(dada2_for_qa_s, sepp_for_qa_s, filt_for_qa_s)
			.collect()
			.flatten()
			.unique()
			.filter( ~/.*DataSequence.*/ ) 
	

	output:
		file "*FeatureDataSequence.qzv"

		"""
		qiime feature-table tabulate-seqs --i-data ${seq} --o-visualization ${seq.simpleName}.FeatureDataSequence.qzv
		"""}

































// dada2_for_break.concat(deblur_for_break).flatten().filter( ~/.*Frequency.*/ ).view()

// PCoAResults % Properties('biplot') from qiime diversity pcoa-biplot
process diversity_comp {

	publishDir path: DIR_div_beta, mode: 'copy', pattern: '*DistanceMatrix.qza'
	publishDir path: DIR_div_beta_pcoa, mode: 'copy', pattern: '*PCoAResults.qza'
	publishDir path: DIR_div_beta_pcoa_bp, mode: 'copy', pattern: '*PCoAResults_biplot.qza'
	publishDir path: DIR_div_beta_pcoa_vis, mode: 'copy', pattern: '*PCoAResults.qzv'
	publishDir path: DIR_div_beta_pcoa_bp_vis, mode: 'copy', pattern: '*PCoAResults_biplot.qzv'
	publishDir path: DIR_div_temp, mode: 'copy', pattern: '*FeatureTableRelativeFrequency.qza'
	
	input:
		file freq from dada2_for_break.concat(deblur_for_break).collect().flatten().filter( ~/.*Frequency.*/ )

	output:
		file '*DistanceMatrix.qza' into dist_comp
		file '*PCoAResults.qza'
		file '*PCoAResults.qzv'
		file '*PCoAResults_biplot.qza'
		file '*PCoAResults_biplot.qzv'
		file '*FeatureTableRelativeFrequency.qza'

		"""
		qiime deicode auto-rpca \
			--i-table ${freq} \
			--o-biplot deicode_${freq.simpleName}.PCoAResults.qza \
			--o-distance-matrix deicode_${freq.simpleName}.DistanceMatrix.qza
			
		qiime emperor plot \
			--i-pcoa deicode_${freq.simpleName}.PCoAResults.qza \
			--m-metadata-file ${METADATA} \
			--o-visualization deicode_${freq.simpleName}.PCoAResults.qzv
			
		
			
		qiime feature-table relative-frequency \
			--i-table ${freq} \
			--o-relative-frequency-table ${freq.simpleName}.FeatureTableRelativeFrequency.qza

		qiime diversity pcoa-biplot \
			--i-pcoa deicode_${freq.simpleName}.PCoAResults.qza \
			--i-features ${freq.simpleName}.FeatureTableRelativeFrequency.qza \
			--o-biplot deicode_${freq.simpleName}.PCoAResults_biplot.qza

		qiime qurro loading-plot \
			--i-ranks deicode_${freq.simpleName}.PCoAResults_biplot.qza \
			--i-table ${freq} \
			--m-sample-metadata-file ${METADATA} \
			--o-visualization deicode_${freq.simpleName}.PCoAResults_qurro.qzv

		qiime emperor plot \
			--i-pcoa deicode_${freq.simpleName}.PCoAResults_biplot.qza \
			--m-metadata-file ${METADATA} \
			--o-visualization deicode_${freq.simpleName}.PCoAResults_biplot.qzv
		"""}

























// This is so that all inputs are coordinated. If done from outside the process, only first function that is ready will create channel
process generate_chan_for_diversity_std_freq {
	
	input:
		file freq from deblur_for_div.concat(dada2_for_div, sepp_for_div, filt_for_div).collect().flatten().filter( ~/.*Frequency.*/ )

	output:
		file "tmp_*FeatureTableFrequency.qza" into (div_dada2, div_deblur)

		"""
		cp ${freq} tmp_${freq}
		"""}



process generate_chan_for_diversity_std_phyl {

	input:
		file phyl from phylogeny_for_div
		
	output:
		file "tmp_*PhylogenyRooted.qza" into (phyl_dada2, phyl_deblur)
	
		"""
		cp ${phyl} tmp_${phyl}
		"""}
























 // div_dada2.filter( ~/.*dada2.*/ ).combine(phyl_dada2.filter( ~/.*dada2.*/ )).concat(div_deblur.filter( ~/.*deblur\..*/ ).combine(phyl_deblur.filter( ~/.*deblur\..*/ )), div_deblur_s.filter( ~/.*deblur_singletons.*/ ).combine(phyl_deblur_s.filter( ~/.*deblur_singletons.*/ ))).flatten().collate(2).view()

process diversity_std {
	publishDir path: DIR_div_alpha, mode: 'copy', pattern: '*SampleDataAlphaDiversity.qza'
	publishDir path: DIR_div_beta, mode: 'copy', pattern: '*DistanceMatrix.qza'
	publishDir path: DIR_div_beta_pcoa, mode: 'copy', pattern: '*PCoAResults.qza'
	publishDir path: DIR_div_beta_pcoa_bp, mode: 'copy', pattern: '*PCoAResults_biplot.qza'
	publishDir path: DIR_div_beta_pcoa_vis, mode: 'copy', pattern: '*PCoAResults.qzv'
	publishDir path: DIR_div_beta_pcoa_bp_vis, mode: 'copy', pattern: '*PCoAResults_biplot.qzv'
	publishDir path: DIR_div_temp, mode: 'copy', pattern: '{rarefied_*FeatureTableFrequency.qza,*FeatureTableRelativeFrequency.qza}'
	
	input:
		tuple file(freq), file(phyl) from div_dada2.filter( ~/.*dada2.*/ ).combine(phyl_dada2.filter( ~/.*dada2.*/ )).concat(div_deblur.filter( ~/.*deblur\..*/ ).combine(phyl_deblur.filter( ~/.*deblur\..*/ ))).flatten().collate(2)

	output:
		file '*SampleDataAlphaDiversity.qza' into alpha_std
		file '*DistanceMatrix.qza' into dist_std
		file '*PCoAResults.qza'
		file '*PCoAResults.qzv'
		file '*PCoAResults_biplot.qza'
		file '*PCoAResults_biplot.qzv'
		file '*FeatureTableRelativeFrequency.qza'
		file 'rarefied_*FeatureTableFrequency.qza'

		"""
		qiime diversity core-metrics-phylogenetic \
			--i-table ${freq} \
			--i-phylogeny ${phyl} \
			--p-sampling-depth ${diversity_std_sampling_depth} \
			--m-metadata-file ${METADATA} \
			--p-n-jobs-or-threads ${diversity_std_threads} \
			--o-rarefied-table rarefied_${freq.simpleName}.FeatureTableFrequency.qza \
			--o-observed-features-vector of_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-shannon-vector shannon_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-evenness-vector evenness_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-faith-pd-vector faith_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-jaccard-distance-matrix jaccard_rarefied_${freq.simpleName}.DistanceMatrix.qza \
			--o-jaccard-pcoa-results jaccard_rarefied_${freq.simpleName}.PCoAResults.qza \
			--o-jaccard-emperor jaccard_rarefied_${freq.simpleName}.PCoAResults.qzv \
			--o-bray-curtis-distance-matrix b-c_rarefied_${freq.simpleName}.DistanceMatrix.qza \
			--o-bray-curtis-pcoa-results b-c_rarefied_${freq.simpleName}.PCoAResults.qza \
			--o-bray-curtis-emperor b-c_rarefied_${freq.simpleName}.PCoAResults.qzv \
			--o-unweighted-unifrac-distance-matrix u_unifrac_rarefied_${freq.simpleName}.DistanceMatrix.qza \
			--o-unweighted-unifrac-pcoa-results u_unifrac_rarefied_${freq.simpleName}.PCoAResults.qza \
			--o-unweighted-unifrac-emperor u_unifrac_rarefied_${freq.simpleName}.PCoAResults.qzv \
			--o-weighted-unifrac-distance-matrix unifrac_rarefied_${freq.simpleName}.DistanceMatrix.qza \
			--o-weighted-unifrac-pcoa-results unifrac_rarefied_${freq.simpleName}.PCoAResults.qza \
			--o-weighted-unifrac-emperor unifrac_rarefied_${freq.simpleName}.PCoAResults.qzv
		
		qiime feature-table relative-frequency \
			--i-table ${freq} \
			--o-relative-frequency-table ${freq.simpleName}.FeatureTableRelativeFrequency.qza
		
		parallel " \
		qiime diversity pcoa-biplot \
			--i-pcoa {}${freq.simpleName}.PCoAResults.qza \
			--i-features ${freq.simpleName}.FeatureTableRelativeFrequency.qza \
			--o-biplot {}${freq.simpleName}.PCoAResults_biplot.qza \
			
		qiime qurro loading-plot \
			--i-ranks {}${freq.simpleName}.PCoAResults_biplot.qza \
			--i-table ${freq} \
			--m-sample-metadata-file ${METADATA} \
			--o-visualization {}${freq.simpleName}.PCoAResults_qurro.qzv

		qiime emperor plot \
			--i-pcoa {}${freq.simpleName}.PCoAResults_biplot.qza \
			--m-metadata-file ${METADATA} \
			--o-visualization {}${freq.simpleName}.PCoAResults_biplot.qzv \
		" ::: jaccard_rarefied_ b-c_rarefied_ u_unifrac_rarefied_ unifrac_rarefied_
		"""}




























process diversity_tax {
	publishDir path: DIR_div_alpha, mode: 'copy', pattern: '*SampleDataAlphaDiversity.qza'
	publishDir path: DIR_div_beta, mode: 'copy', pattern: '*DistanceMatrix.qza'
	publishDir path: DIR_div_beta_pcoa, mode: 'copy', pattern: '*PCoAResults.qza'
	publishDir path: DIR_div_beta_pcoa_bp, mode: 'copy', pattern: '*PCoAResults_biplot.qza'
	publishDir path: DIR_div_beta_pcoa_vis, mode: 'copy', pattern: '*PCoAResults.qzv'
	publishDir path: DIR_div_beta_pcoa_bp_vis, mode: 'copy', pattern: '*PCoAResults_biplot.qzv'
	publishDir path: DIR_div_temp, mode: 'copy', pattern: '{rarefied_*FeatureTableFrequency.qza,*FeatureTableRelativeFrequency.qza}'
	
	input:
		file freq_tax from tax_for_div.collect().flatten()

	output:
		file '*SampleDataAlphaDiversity.qza' into alpha_tax
		file '*DistanceMatrix.qza' into dist_tax
		file '*PCoAResults.qza'
		file '*PCoAResults.qzv'
		file '*PCoAResults_biplot.qza'
		file '*PCoAResults_biplot.qzv'
		file '*FeatureTableRelativeFrequency.qza'
		file 'rarefied_*FeatureTableFrequency.qza'

		"""
		qiime diversity core-metrics \
			--i-table ${freq_tax} \
			--p-sampling-depth ${diversity_std_sampling_depth} \
			--m-metadata-file ${METADATA} \
			--p-n-jobs ${diversity_std_threads} \
			--o-rarefied-table rarefied_${freq_tax.simpleName}.FeatureTableFrequency.qza \
			--o-observed-features-vector of_rarefied_${freq_tax.simpleName}.SampleDataAlphaDiversity.qza \
			--o-shannon-vector shannon_rarefied_${freq_tax.simpleName}.SampleDataAlphaDiversity.qza \
			--o-evenness-vector evenness_rarefied_${freq_tax.simpleName}.SampleDataAlphaDiversity.qza \
			--o-jaccard-distance-matrix jaccard_rarefied_${freq_tax.simpleName}.DistanceMatrix.qza \
			--o-jaccard-pcoa-results jaccard_rarefied_${freq_tax.simpleName}.PCoAResults.qza \
			--o-jaccard-emperor jaccard_rarefied_${freq_tax.simpleName}.PCoAResults.qzv \
			--o-bray-curtis-distance-matrix b-c_rarefied_${freq_tax.simpleName}.DistanceMatrix.qza \
			--o-bray-curtis-pcoa-results b-c_rarefied_${freq_tax.simpleName}.PCoAResults.qza \
			--o-bray-curtis-emperor b-c_rarefied_${freq_tax.simpleName}.PCoAResults.qzv
		
		qiime feature-table relative-frequency \
			--i-table ${freq_tax} \
			--o-relative-frequency-table ${freq_tax.simpleName}.FeatureTableRelativeFrequency.qza
		
		parallel " \
		qiime diversity pcoa-biplot \
			--i-pcoa {}${freq_tax.simpleName}.PCoAResults.qza \
			--i-features ${freq_tax.simpleName}.FeatureTableRelativeFrequency.qza \
			--o-biplot {}${freq_tax.simpleName}.PCoAResults_biplot.qza \
			
		qiime qurro loading-plot \
			--i-ranks {}${freq_tax.simpleName}.PCoAResults_biplot.qza \
			--i-table ${freq_tax} \
			--m-sample-metadata-file ${METADATA} \
			--o-visualization {}${freq_tax.simpleName}.PCoAResults_qurro.qzv

		qiime emperor plot \
			--i-pcoa {}${freq_tax.simpleName}.PCoAResults_biplot.qza \
			--m-metadata-file ${METADATA} \
			--o-visualization {}${freq_tax.simpleName}.PCoAResults_biplot.qzv \
		" ::: jaccard_rarefied_ b-c_rarefied_
		"""}



























//alpha_comp.concat(alpha_std).flatten().view()

process alpha_stat {
	publishDir path: DIR_div_alpha_vis, mode: 'copy'
	
	input:
		file alpha from alpha_std.concat(alpha_tax).collect().flatten()

	output:
		file '*SampleDataAlphaDiversity.qzv'

		"""
		qiime diversity alpha-group-significance \
			--i-alpha-diversity ${alpha} \
			--m-metadata-file ${METADATA} \
			--o-visualization ${alpha.simpleName}.SampleDataAlphaDiversity.qzv

		qiime diversity alpha-correlation \
			--i-alpha-diversity ${alpha} \
			--m-metadata-file ${METADATA} \
			--o-visualization corr_${alpha.simpleName}.SampleDataAlphaDiversity.qzv
		"""}
// alpha-group-significance - UNEQUAL SAMPLE SIZES? - uses Kruskal-Wallis William H Kruskal and W Allen Wallis. Use of ranks in one-criterion variance analysis. Journal of the American statistical Association, 47(260):583–621, 195 - its fine for unequal sample sizes




























//--p-where "[sampleid] IN ('B1', 'B6', 'C5', 'C6', 'D5', 'E3', 'E5', 'F6', 'G6')"
// "[sampleid]='B1' OR [sampleid]='B6' OR [sampleid]='C5' OR [sampleid]='C6' OR [sampleid]='D5' OR [sampleid]='E3' OR [sampleid]='E5' OR [sampleid]='F6' OR [sampleid]='G6'"




//dist_comp.concat(dist_std, dist_tax).collect().flatten()

adonis_formula = 'group mother anemia_v_treatment mother*group mother*anemia_v_treatment'

adonis_name_crooked1 = 'dex_muscle_v_treatment'
adonis_sed_crooked1 = "'/^A[0-9]/d'"
adonis_samples_crooked1 = "'A1', 'A2', 'A3', 'A4', 'A5'"
adonis_formulas_crooked1 = 'dex_muscle_v_treatment dex_muscle_v_treatment*mother'



permdisp_cols = 'group mother anemia_v_treatment dex_muscle_v_treatment'



beta_corr_col = "non_heme_fe_liver_mg_fe_kg plt_k_ul plasma_iron_ug_dl rbc_quant_z_score"

beta_corr_name_crooked1 = "non_heme_fe_faces_mg_fe_kg"
beta_corr_col_crooked1 = "non_heme_fe_faces_mg_fe_kg"
beta_corr_sed_crooked1 = "-E '/^B1|^B6|^C5|^C6|^D5|^E3|^E5|^F6|^G6/d'"
beta_corr_samples_crooked1 = "'B1', 'B6', 'C5', 'C6', 'D5', 'E3', 'E5', 'F6', 'G6'"

beta_corr_name_crooked2 = "A1"
beta_corr_col_crooked2 = "ret_k_ul ret_he_pg rbc_morphology_z_score"
beta_corr_sed_crooked2 = "'/^A1/d'"
beta_corr_samples_crooked2 = "'A1'"



process beta_stat {
	publishDir path: DIR_div_beta_corr, mode: 'copy', pattern: 'corr_*qza'
	publishDir path: DIR_div_beta_stat_adonis, mode: 'copy', pattern: '*adonis*'
	publishDir path: DIR_div_beta_stat_permdisp, mode: 'copy', pattern: '*permdisp*'
	publishDir path: DIR_div_beta_stat_corr, mode: 'copy', pattern: 'corr_*qzv'
	
	input:
		file dist from dist_comp.concat(dist_std, dist_tax).collect().flatten()

	output:
		tuple file('*DistanceMatrix.qzv'), file ('*DistanceMatrix.qza')

		"""
		parallel " \
		qiime diversity adonis  \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--p-formula {} \
			--o-visualization {}_adonis_${dist.simpleName}.DistanceMatrix.qzv \
		" ::: ${adonis_formula}
		
		

		qiime diversity filter-distance-matrix \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--p-where "[sampleid] IN (${adonis_samples_crooked1})" \
			--p-exclude-ids True \
			--o-filtered-distance-matrix ${adonis_name_crooked1}_${dist.simpleName}.ass.qza
		
		sed ${adonis_sed_crooked1} ${METADATA} > ${adonis_name_crooked1}_metadata
		
		parallel " \
		qiime diversity adonis  \
			--i-distance-matrix ${adonis_name_crooked1}_${dist.simpleName}.ass.qza \
			--m-metadata-file ${adonis_name_crooked1}_metadata \
			--p-formula {} \
			--o-visualization {}_adonis_${dist.simpleName}.DistanceMatrix.qzv \
		" ::: ${adonis_formulas_crooked1}





		
		parallel " \
		qiime diversity beta-group-significance  \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--m-metadata-column {} \
			--p-method 'permdisp' \
			--o-visualization {}_permdisp_${dist.simpleName}.DistanceMatrix.qzv \
		" ::: ${permdisp_cols}
		
			
			
			
			
		
		parallel " \
		qiime diversity beta-correlation \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--m-metadata-column {} \
			--o-metadata-distance-matrix corr_{}_${dist.simpleName}.DistanceMatrix.qza \
			--o-mantel-scatter-visualization corr_{}_${dist.simpleName}.DistanceMatrix.qzv \
		" ::: ${beta_corr_col}
		
		
		
		qiime diversity filter-distance-matrix \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--p-where "[sampleid] IN (${beta_corr_samples_crooked1})" \
			--p-exclude-ids True \
			--o-filtered-distance-matrix ${beta_corr_name_crooked1}_${dist.simpleName}.ass.qza
		
		sed ${beta_corr_sed_crooked1} ${METADATA} > ${beta_corr_name_crooked1}_metadata		
		
		qiime diversity beta-correlation \
			--i-distance-matrix ${beta_corr_name_crooked1}_${dist.simpleName}.ass.qza \
			--m-metadata-file ${beta_corr_name_crooked1}_metadata \
			--m-metadata-column ${beta_corr_col_crooked1} \
			--o-metadata-distance-matrix corr_${beta_corr_col_crooked1}_${dist.simpleName}.DistanceMatrix.qza \
			--o-mantel-scatter-visualization corr_${beta_corr_col_crooked1}_${dist.simpleName}.DistanceMatrix.qzv
		
		
		
		qiime diversity filter-distance-matrix \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--p-where "[sampleid] IN (${beta_corr_samples_crooked2})" \
			--p-exclude-ids True \
			--o-filtered-distance-matrix ${beta_corr_name_crooked2}_${dist.simpleName}.ass.qza
		
		sed ${beta_corr_sed_crooked2} ${METADATA} > ${beta_corr_name_crooked2}_metadata
		
		parallel " \
		qiime diversity beta-correlation \
			--i-distance-matrix ${beta_corr_name_crooked2}_${dist.simpleName}.ass.qza \
			--m-metadata-file ${beta_corr_name_crooked2}_metadata \
			--m-metadata-column {} \
			--o-metadata-distance-matrix corr_{}_${dist.simpleName}.DistanceMatrix.qza \
			--o-mantel-scatter-visualization corr_{}_${dist.simpleName}.DistanceMatrix.qzv \
		" ::: ${beta_corr_col_crooked2}
		"""}
/// ADONIS may not work well for unequal sample sizes if dispersions are also unequal i think. Look at the plots. If there is chance for significance - there is a PERMANOVA robust to sample size inequality: W∗d-test: robust distance-based multivariate analysis of variance Or, ANOSIM podobno works with unbalanced???










