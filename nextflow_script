// CLEAN UP: rm -Rf data_q snakemake_report.txt
// nextflow run -with-report -with-trace -with-timeline -name test nextflow_script
// nextflow run nextflow_script -with-report -with-trace -with-timeline -resume

// change in metadata: plasma iron_ug_dl into plasma_iron_ug_dl

DIR_data_q = 'nx_data_q'
DIR_data_q_vis = 'nx_data_q/vis'
DIR_data_q_vis_freq = 'nx_data_q/vis/freq'
DIR_data_q_vis_seq = 'nx_data_q/vis/seq'
DIR_data_q_temp = 'nx_data_q/temp'
DIR_data_q_temp_vis = 'nx_data_q/temp/vis'
DIR_phyl = 'nx_phylogeny'
DIR_tax = 'nx_taxonomy'
DIR_tax_vis = 'nx_taxonomy/vis'
DIR_div = 'nx_diversity'
DIR_div_alpha = 'nx_diversity/alpha'
DIR_div_alpha_vis = 'nx_diversity/alpha/vis'
DIR_div_beta = 'nx_diversity/beta'
DIR_div_beta_pcoa = 'nx_diversity/beta/pcoa'
DIR_div_beta_pcoa_vis = 'nx_diversity/beta/pcoa/vis'
DIR_div_beta_pcoa_bp = 'nx_diversity/beta/pcoa_bp'
DIR_div_beta_pcoa_bp_vis = 'nx_diversity/beta/pcoa_bp/vis'
DIR_div_beta_corr = 'nx_diversity/beta/corr'
DIR_div_beta_stat_adonis = 'nx_diversity/beta/corr/adonis'
DIR_div_beta_stat_permdisp = 'nx_diversity/beta/corr/permdisp'
DIR_div_beta_stat_corr = 'nx_diversity/beta/corr/corr'
DIR_div_temp = 'nx_diversity/temp'
DIR_diff_gneiss_cor = 'nx_differential/gneiss_cor'
DIR_diff_gneiss_phyl = 'nx_differential/gneiss_phyl'
DIR_diff_gneiss_phyl_vis = 'nx_differential/gneiss_phyl/vis'
DIR_diff_gneiss_cor_vis = 'nx_differential/gneiss_cor/vis'



METADATA = file('qiime_metadata_nf.tsv')
FORMULAS = 'group'
CAT_COLS = 'group'

import_fastq_manifest = file('qiime_manifest_short_nf.tsv')
import_fastq_data_type = 'SampleData[PairedEndSequencesWithQuality]'
import_fastq_format = 'PairedEndFastqManifestPhred33V2'

deblur_prep_cores = 3
deblur_prep_minovlen = 110
deblur_prep_maxdiffs = 20

dada2_trim_f = 17
dada2_trim_r = 21
dada2_trunc_f = 268
dada2_trunc_r = 218
dada2_threads = 4
//do figaro again, cause i returned poorly sequenced sample

deblur_prep_front_f = 'CCTACGGGNGGCWGCAG'
deblur_prep_front_r = 'GACTACHVGGGTATCTAATCC'
deblur_prep_adapter_f = 'GGATTAGATACCCBDGTAGTC'
deblur_prep_adapter_r = 'CTGCWGCCNCCCGTAGG'
deblur_jobs = 4
deblur_trim_length = 401

phylogeny_file = file('phylogeny/sepp-refs-silva-128.qza')
phylogeny_threads = 3

taxonomy_ref_reads = file('prepare_taxonomy/silva-138.1-ssu-nr99-seqs-341f-785r-derep-uniq.qza')
taxonomy_ref_tax = file('prepare_taxonomy/silva-138.1-ssu-nr99-tax-341f-785r-derep-uniq.qza')
taxonomy_weight = file('prepare_taxonomy/gut-341f-785r-classifier.qza')
taxonomy_threads = 1

filtering_min_frequency = 2 //10
filtering_min_samples = 2 //11

diversity_comp_depth = 1000 //

diversity_std_sampling_depth = 1000 //
diversity_std_threads = 2


/////////////////////// make some histograms on metadata variables to see if they are variable enough to uzasadnić inclusion in analysis or categorization? /////////////////////////////
///////////////////////////////////////// IF DISCRETIZATION - ADD NEW COLUMNS //////////////////////////////////////













process metadata_vis {
	publishDir path: DIR_data_q_vis, mode: 'copy'

	input:
		file METADATA
	output:
		file 'qiime_metadata.qzv'

	"""
	qiime metadata tabulate --m-input-file ${METADATA} --o-visualization qiime_metadata.qzv
	"""}

















process import_fastq {
	publishDir path: DIR_data_q, mode: 'copy', pattern: '*qza'
	publishDir path: DIR_data_q_vis, mode: 'copy', pattern: '*qzv'
	
	input:
		file import_fastq_manifest

	output:
		file 'primary_input.qza' into import_fastq_out
		file 'primary_input.qzv'

	"""
	qiime tools import \
		--type ${import_fastq_data_type} \
		--input-path ${import_fastq_manifest} \
		--output-path primary_input.qza \
		--input-format ${import_fastq_format}
		
	qiime demux summarize --i-data primary_input.qza --o-visualization primary_input.qzv
	"""}
	
















	
//In trim-paired read 2 znajduje zawsze oba adaptery. wierd. Może spróbować obniżyć max error to 1 - --p-error-rate 0.05? 
// didnt output SequencesWithQuality.qzv's tam gdzie potrzeba
process deblur_prep {
	publishDir path: DIR_data_q_temp, mode: 'copy', pattern: '*qza'
	publishDir path: DIR_data_q_vis, mode: 'copy', pattern: '{*log,*qzv}'

	input:
		file primary_input from import_fastq_out
	output:
		file 'qa_joined_noadapter_for_deblur_SampleDataSequencesWithQuality.qza' into deblur_prep_out
		tuple file('noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.qza'), file('joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.qza'), file('*log'), file('*QualityFilterStats.qza'), file('*.qzv')

		"""
		qiime cutadapt trim-paired \
			--i-demultiplexed-sequences ${primary_input} \
			--p-cores ${deblur_prep_cores} \
			--p-front-f ${deblur_prep_front_f} \
			--p-front-r ${deblur_prep_front_r} \
			--p-adapter-f ${deblur_prep_adapter_f} \
			--p-adapter-r ${deblur_prep_adapter_r} \
			--p-match-adapter-wildcards True \
			--p-discard-untrimmed True \
			--o-trimmed-sequences noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.qza \
			--verbose > report_noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.log
		
		qiime demux summarize --i-data noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.qza --o-visualization noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.qzv
		
		

		qiime vsearch join-pairs \
			--i-demultiplexed-seqs noadapter_for_deblur_SampleDataPairedEndSequencesWithQuality.qza \
			--p-threads ${deblur_prep_cores} \
			--p-minovlen ${deblur_prep_minovlen} \
			--p-maxdiffs ${deblur_prep_maxdiffs} \
			--o-joined-sequences joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.qza \
			--verbose &> report_joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.log
			
		qiime demux summarize --i-data joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.qza --o-visualization joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.qzv		
		
		

		qiime quality-filter q-score \
			--i-demux joined_noadapter_for_deblur_SampleDataJoinedSequencesWithQuality.qza \
			--o-filtered-sequences qa_joined_noadapter_for_deblur_SampleDataSequencesWithQuality.qza \
			--o-filter-stats qa_joined_noadapter_for_deblur_QualityFilterStats.qza
			
		qiime metadata tabulate --m-input-file qa_joined_noadapter_for_deblur_QualityFilterStats.qza --o-visualization qa_joined_noadapter_for_deblur_QualityFilterStats.qzv
			
		qiime demux summarize --i-data qa_joined_noadapter_for_deblur_SampleDataSequencesWithQuality.qza --o-visualization qa_joined_noadapter_for_deblur_SampleDataSequencesWithQuality.qzv
		"""}
	
	



	















// didnt output qzv's tam gdzie potrzeba
process deblur {
	publishDir path: DIR_data_q, mode: 'copy', pattern: '*Feature*'
	publishDir path: DIR_data_q_temp, mode: 'copy', pattern: '*DeblurStats.qza'
	publishDir path: DIR_data_q_vis, mode: 'copy', pattern: '*qzv'
	
	input:
		file deblur_prep_out
		
	output:
		tuple file('*FeatureDataSequence.qza'), file('*FeatureTableFrequency.qza') into (deblur_for_sepp, deblur_for_filt, deblur_for_qa, deblur_for_break, deblur_for_div, deblur_for_divnet)
		tuple file("*SampleDataDeblurStats*")
		

		"""
		qiime deblur denoise-16S \
			--i-demultiplexed-seqs ${deblur_prep_out} \
			--p-trim-length ${deblur_trim_length} \
			--p-left-trim-len 0 \
			--p-sample-stats True \
			--p-jobs-to-start ${deblur_jobs} \
			--p-no-hashed-feature-ids \
			--o-table deblur.FeatureTableFrequency.qza \
			--o-representative-sequences deblur.FeatureDataSequence.qza \
			--o-stats deblur.SampleDataDeblurStats.qza

		qiime deblur visualize-stats --i-deblur-stats deblur.SampleDataDeblurStats.qza --o-visualization deblur.SampleDataDeblurStats.qzv



		qiime deblur denoise-16S \
			--i-demultiplexed-seqs ${deblur_prep_out} \
			--p-min-reads 1 \
			--p-min-size 1 \
			--p-trim-length ${deblur_trim_length} \
			--p-left-trim-len 0 \
			--p-sample-stats True \
			--p-jobs-to-start ${deblur_jobs} \
			--p-no-hashed-feature-ids \
			--o-table deblur_singletons.FeatureTableFrequency.qza \
			--o-representative-sequences deblur_singletons.FeatureDataSequence.qza \
			--o-stats deblur_singletons.SampleDataDeblurStats.qza
			
		qiime deblur visualize-stats --i-deblur-stats deblur_singletons.SampleDataDeblurStats.qza --o-visualization deblur_singletons.SampleDataDeblurStats.qzv
		"""}
























// didnt output qzv's tam gdzie potrzeba
process dada2 {
	publishDir path: DIR_data_q, mode: 'copy', pattern: '*Feature*'
	publishDir path: DIR_data_q_temp, mode: 'copy', pattern: '*DADA2Stats.qza'
	publishDir path: DIR_data_q_vis, mode: 'copy', pattern: '*qzv'

	input:
		file primary_input from import_fastq_out
	output:
		tuple file('*FeatureDataSequence.qza'), file('*FeatureTableFrequency.qza') into (dada2_for_sepp, dada2_for_filt, dada2_for_qa, dada2_for_break, dada2_for_div, dada2_for_divnet)
		tuple file('*SampleDataDADA2Stats*')

	"""
	qiime dada2 denoise-paired \
		--i-demultiplexed-seqs ${primary_input} \
		--p-trim-left-f ${dada2_trim_f} \
		--p-trim-left-r ${dada2_trim_r} \
		--p-trunc-len-f ${dada2_trunc_f} \
		--p-trunc-len-r ${dada2_trunc_r} \
		--p-max-ee-f 2 \
		--p-max-ee-r 2 \
		--p-pooling-method "pseudo" \
		--p-chimera-method "consensus" \
		--p-n-threads ${dada2_threads} \
		--p-no-hashed-feature-ids \
		--o-table dada2.FeatureTableFrequency.qza \
		--o-representative-sequences dada2.FeatureDataSequence.qza \
		--o-denoising-stats dada2.SampleDataDADA2Stats.qza
		
	qiime metadata tabulate --m-input-file dada2.SampleDataDADA2Stats.qza --o-visualization dada2.SampleDataDADA2Stats.qzv
	"""}





















// filtered sepp dada2 i dada2 mają tą samą taxonomy
//dada2_for_sepp.concat(deblur_for_sepp).flatten().toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten().collate(2).view()

// remove maxForks/memory for server version
process phylogeny {
	publishDir path: DIR_phyl, mode: 'copy', pattern: '{*PhylogenyRooted.qza,*Placements.qza}'
	publishDir path: DIR_data_q, mode: 'copy', pattern: 'sepp*Feature*'
	publishDir path: DIR_data_q_temp, mode: 'copy', pattern: 'removed_sepp_*'
	
	maxForks 1
	memory '10 GB'
	
	input:
		tuple file(seq), file(freq) from dada2_for_sepp.concat(deblur_for_sepp).flatten().toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten().collate(2)
		
	output:
		file "sepp_*PhylogenyRooted.qza" into (phylogeny_for_div, phylogeny_for_diff)
		file "sepp_*Placements.qza"
		tuple file("sepp_*FeatureDataSequence.qza"), file("sepp_*FeatureTableFrequency.qza") into (sepp_for_filt, sepp_for_qa, sepp_for_div)
		file "removed_sepp_*FeatureTableFrequency.qza"

		"""
		qiime fragment-insertion sepp \
			--i-representative-sequences ${seq} \
			--i-reference-database ${phylogeny_file} \
			--p-threads ${phylogeny_threads} \
			--o-tree sepp_${freq.simpleName}.PhylogenyRooted.qza \
			--o-placements sepp_${freq.simpleName}.Placements.qza

		qiime fragment-insertion filter-features \
			--i-table ${freq} \
			--i-tree sepp_${freq.simpleName}.PhylogenyRooted.qza \
			--o-filtered-table sepp_${freq.simpleName}.FeatureTableFrequency.qza \
			--o-removed-table removed_sepp_${freq.simpleName}.FeatureTableFrequency.qza

		qiime feature-table filter-seqs \
			--i-data ${seq} \
			--i-table sepp_${freq.simpleName}.FeatureTableFrequency.qza \
			--o-filtered-data sepp_${freq.simpleName}.FeatureDataSequence.qza
		"""}	
	
	









	
	
	
	
	
	
	
	
	

//dada2_for_filt.concat(deblur_for_filt, sepp_for_filt).flatten().toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten().collate(2).view()

process filtering {
	publishDir path: DIR_data_q, mode: 'copy'
	
	input:
		tuple file(seq), file(freq) from dada2_for_filt.concat(deblur_for_filt, sepp_for_filt).flatten().toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten().collate(2)
	output:
		
		tuple file("filtered_*FeatureDataSequence.qza"), file("filtered_*FeatureTableFrequency.qza") into (filt_for_tax, filt_for_qa, filt_for_div, filt_for_diff, filt_for_corn)

		"""
		qiime feature-table filter-features \
			--i-table ${freq} \
			--p-min-frequency ${filtering_min_frequency} \
			--p-min-samples ${filtering_min_samples} \
			--o-filtered-table filtered_${freq.simpleName}.FeatureTableFrequency.qza
			
		qiime feature-table filter-seqs \
			--i-data ${seq} \
			--i-table filtered_${freq.simpleName}.FeatureTableFrequency.qza \
			--o-filtered-data filtered_${freq.simpleName}.FeatureDataSequence.qza
		"""}	


















	
	
	
	









/*
qiime feature-classifier classify-sklearn \
	--i-classifier ${taxonomy_weight} \
	--i-reads ${seq} \
	--o-classification bespoke_nb_${freq.simpleName}.FeatureDataTaxonomy.qza
	
qiime taxa barplot \
	--i-table ${freq} \
	--i-taxonomy bespoke_nb_${freq.simpleName}.FeatureDataTaxonomy.qza \
	--m-metadata-file ${METADATA} \
	--o-visualization bespoke_nb_${freq.simpleName}.FeatureDataTaxonomy.qzv

qiime taxa collapse \
	--i-table ${freq} \
	--i-taxonomy bespoke_nb_${freq.simpleName}.FeatureDataTaxonomy.qza \
	--p-level {} \
	--o-collapsed-table taxonomy/collapse/'lev_'{}'_bespoke_nb_${freq.simpleName}.FeatureTableFrequency.qza \

*/

process taxonomy {
	publishDir path: DIR_tax, mode: 'copy', pattern: '*Taxonomy.qza'
	publishDir path: DIR_tax_vis, mode: 'copy', pattern: '*Taxonomy.qzv'
	publishDir path: DIR_data_q, mode: 'copy', pattern: 'lev_*Frequency.qza'
	
	input:
		tuple file(seq), file(freq) from filt_for_tax

	output:
		file "*FeatureDataTaxonomy.qza" into phyl_freq
		file "*FeatureDataTaxonomy.qzv"
		file "*FeatureTableFrequency.qza" into (tax_for_qa, tax_for_diff, tax_for_corn, tax_for_div)

		"""
		qiime feature-classifier classify-consensus-vsearch \
			--i-query ${seq} \
			--i-reference-reads ${taxonomy_ref_reads} \
			--i-reference-taxonomy ${taxonomy_ref_tax} \
			--p-threads ${taxonomy_threads} \
			--o-classification vsearch_${freq.simpleName}.FeatureDataTaxonomy.qza

		qiime taxa barplot \
			--i-table ${freq} \
			--i-taxonomy vsearch_${freq.simpleName}.FeatureDataTaxonomy.qza \
			--m-metadata-file ${METADATA} \
			--o-visualization vsearch_${freq.simpleName}.FeatureDataTaxonomy.qzv


		
		
		parallel " \
		qiime taxa collapse \
			--i-table ${freq} \
			--i-taxonomy vsearch_${freq.simpleName}.FeatureDataTaxonomy.qza \
			--p-level {} \
			--o-collapsed-table lev_{}_vsearch_${freq.simpleName}.FeatureTableFrequency.qza \





		" ::: 2 3 4 5 6 7
		"""}



/*
qiime feature-classifier classify-sklearn \
	--i-classifier ${taxonomy_weight} \
	--i-reads ${seq} \
	--o-classification bespoke_nb_${freq.simpleName}.FeatureDataTaxonomy.qza*/
process taxonomy {
	publishDir path: DIR_tax, mode: 'copy', pattern: '*Taxonomy.qza'
	
	input:
		tuple file(seq), file(freq) from dada2_for_divnet.concat(deblur_for_divnet).flatten()
		
	output:
		file "*FeatureDataTaxonomy.qza"

		"""
		qiime feature-classifier classify-consensus-vsearch \
			--i-query ${seq} \
			--i-reference-reads ${taxonomy_ref_reads} \
			--i-reference-taxonomy ${taxonomy_ref_tax} \
			--p-threads ${taxonomy_threads} \
			--o-classification for_divnet_vsearch_${freq.simpleName}.FeatureDataTaxonomy.qza
		"""}



















deblur_for_qa.concat(dada2_for_qa, sepp_for_qa, filt_for_qa, tax_for_qa)
	.flatten()
	.unique()
	.into{ freq_qa; seq_qa }



process qa_freq {
	publishDir path: DIR_data_q_vis_freq, mode: 'copy'
	
	input:
		
		file freq from freq_qa.filter( ~/.*Frequency.*/ ) 

	output:
		file "*FeatureTableFrequency.qzv"

		"""
		qiime feature-table summarize --i-table ${freq} --o-visualization ${freq.simpleName}.FeatureTableFrequency.qzv
		"""}



process qa_seq {
	publishDir path: DIR_data_q_vis_seq, mode: 'copy'
	
	input:
		
		file seq from seq_qa.filter( ~/.*DataSequence.*/ )

	output:
		file "*FeatureDataSequence.qzv"

		"""
		qiime feature-table tabulate-seqs --i-data ${seq} --o-visualization ${seq.simpleName}.FeatureDataSequence.qzv
		"""}



















/////////////////// perhaps check also phyllum and genus? levels 2 and 6? /////////////////////




// PCoAResults % Properties('biplot') from qiime diversity pcoa-biplot
dada2_for_break.concat(deblur_for_break).flatten().filter( ~/.*Frequency.*/ ).view()
/*
process diversity_comp {
	publishDir path: DIR_div_alpha, mode: 'copy', pattern: '*SampleDataAlphaDiversity.qza'
	publishDir path: DIR_div_alpha_vis, mode: 'copy', pattern: '*SampleDataAlphaDiversity.qzv'
	publishDir path: DIR_div_beta, mode: 'copy', pattern: '*DistanceMatrix.qza'
	publishDir path: DIR_div_beta_pcoa, mode: 'copy', pattern: '*PCoAResults.qza'
	publishDir path: DIR_div_beta_pcoa_bp, mode: 'copy', pattern: '*PCoAResults_biplot.qza'
	publishDir path: DIR_div_beta_pcoa_vis, mode: 'copy', pattern: '*PCoAResults.qzv'
	publishDir path: DIR_div_beta_pcoa_bp_vis, mode: 'copy', pattern: '*PCoAResults_biplot.qzv'
	publishDir path: DIR_div_temp, mode: 'copy', pattern: '*FeatureTableRelativeFrequency.qza'
	
	input:
		file freq from dada2_for_break.concat(deblur_for_break).flatten().filter( ~/.*Frequency.*/ /*)

	output:
		file '*SampleDataAlphaDiversity.qza' into alpha_comp
		file '*DistanceMatrix.qza' into dist_comp
		file '*SampleDataAlphaDiversity.qzv'
		file '*PCoAResults.qza'
		file '*PCoAResults.qzv'
		file '*PCoAResults_biplot.qza'
		file '*PCoAResults_biplot.qzv'
		file '*FeatureTableRelativeFrequency.qza'

		"""
		qiime breakaway alpha \
			--i-table ${freq} \
			--o-alpha-diversity breakaway_${freq.simpleName}.SampleDataAlphaDiversity.qza \

		qiime breakaway plot \
			--i-alpha-diversity breakaway_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-visualization better_plot_breakaway_${freq.simpleName}.SampleDataAlphaDiversity.qzv



		qiime deicode auto-rpca \
			--i-table ${freq} \
			--o-biplot deicode_${freq.simpleName}.PCoAResults.qza \
			--o-distance-matrix deicode_${freq.simpleName}.DistanceMatrix.qza
			
		qiime emperor plot \
			--i-pcoa deicode_${freq.simpleName}.PCoAResults.qza \
			--m-metadata-file ${METADATA} \
			--o-visualization deicode_${freq.simpleName}.PCoAResults.qzv
			
		
			
		qiime feature-table relative-frequency \
			--i-table ${freq} \
			--o-relative-frequency-table ${freq.simpleName}.FeatureTableRelativeFrequency.qza

		qiime diversity pcoa-biplot \
			--i-pcoa deicode_${freq.simpleName}.PCoAResults.qza \
			--i-features ${freq.simpleName}.FeatureTableRelativeFrequency.qza \
			--o-biplot deicode_${freq.simpleName}.PCoAResults_biplot.qza

		qiime qurro loading-plot \
			--i-ranks deicode_${freq.simpleName}.PCoAResults_biplot.qza \
			--i-table ${freq} \
			--m-sample-metadata-file ${METADATA} \
			--o-visualization deicode_${freq.simpleName}.PCoAResults_qurro.qzv

		qiime emperor plot \
			--i-pcoa deicode_${freq.simpleName}.PCoAResults_biplot.qza \
			--m-metadata-file ${METADATA} \
			--o-visualization deicode_${freq.simpleName}.PCoAResults_biplot.qzv
		"""}






























// deblur_for_div.concat(dada2_for_div, sepp_for_div, filt_for_div, tax_2_for_div, tax_5_for_div, tax_6_for_div).flatten().filter( ~/.*Frequency.*/ //).into{ div_dada2; div_deblur; div_deblur_s }	
	
//phylogeny_for_div.into{ phyl_dada2; phyl_deblur; phyl_deblur_s }



//div_dada2.filter( ~/.*dada2.*/ ).combine(phyl_dada2.filter( ~/.*dada2.*/ ))
//	.concat(div_deblur.filter( ~/.*deblur\..*/ ).combine(phyl_deblur.filter( ~/.*deblur\..*/ )), div_deblur_s.filter( ~/.*deblur_singletons.*/ ).combine(phyl_deblur_s.filter( ~/.*deblur_singletons.*/ )))
//	.flatten().collate(2).view() 
	/*
process diversity_std {
	publishDir path: DIR_div_alpha, mode: 'copy', pattern: '*SampleDataAlphaDiversity.qza'
	publishDir path: DIR_div_beta, mode: 'copy', pattern: '*DistanceMatrix.qza'
	publishDir path: DIR_div_beta_pcoa, mode: 'copy', pattern: '*PCoAResults.qza'
	publishDir path: DIR_div_beta_pcoa_bp, mode: 'copy', pattern: '*PCoAResults_biplot.qza'
	publishDir path: DIR_div_beta_pcoa_vis, mode: 'copy', pattern: '*PCoAResults.qzv'
	publishDir path: DIR_div_beta_pcoa_bp_vis, mode: 'copy', pattern: '*PCoAResults_biplot.qzv'
	publishDir path: DIR_div_temp, mode: 'copy', pattern: '{rarefied_*FeatureTableFrequency.qza,*FeatureTableRelativeFrequency.qza}'
	
	input:
		tuple file(freq), file(phyl) from div_dada2.filter( ~/.*dada2.*/ //).combine(phyl_dada2.filter( ~/.*dada2.*/ )).concat(div_deblur.filter( ~/.*deblur\..*/ ).combine(phyl_deblur.filter( ~/.*deblur\..*/ )), div_deblur_s.filter( ~/.*deblur_singletons.*/ ).combine(phyl_deblur_s.filter( ~/.*deblur_singletons.*/ ))).flatten().collate(2)
/*
	output:
		file '*SampleDataAlphaDiversity.qza' into alpha_std
		file '*DistanceMatrix.qza' into dist_std
		file '*PCoAResults.qza'
		file '*PCoAResults.qzv'
		file '*PCoAResults_biplot.qza'
		file '*PCoAResults_biplot.qzv'
		file '*FeatureTableRelativeFrequency.qza'
		file 'rarefied_*FeatureTableFrequency.qza'

		"""
		qiime diversity core-metrics-phylogenetic \
			--i-table ${freq} \
			--i-phylogeny ${phyl} \
			--p-sampling-depth ${diversity_std_sampling_depth} \
			--m-metadata-file ${METADATA} \
			--p-n-jobs-or-threads ${diversity_std_threads} \
			--o-rarefied-table rarefied_${freq.simpleName}.FeatureTableFrequency.qza \
			--o-observed-features-vector of_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-shannon-vector shannon_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-evenness-vector evenness_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-faith-pd-vector faith_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-jaccard-distance-matrix jaccard_rarefied_${freq.simpleName}.DistanceMatrix.qza \
			--o-jaccard-pcoa-results jaccard_rarefied_${freq.simpleName}.PCoAResults.qza \
			--o-jaccard-emperor jaccard_rarefied_${freq.simpleName}.PCoAResults.qzv \
			--o-bray-curtis-distance-matrix b-c_rarefied_${freq.simpleName}.DistanceMatrix.qza \
			--o-bray-curtis-pcoa-results b-c_rarefied_${freq.simpleName}.PCoAResults.qza \
			--o-bray-curtis-emperor b-c_rarefied_${freq.simpleName}.PCoAResults.qzv \
			--o-unweighted-unifrac-distance-matrix u_unifrac_rarefied_${freq.simpleName}.DistanceMatrix.qza \
			--o-unweighted-unifrac-pcoa-results u_unifrac_rarefied_${freq.simpleName}.PCoAResults.qza \
			--o-unweighted-unifrac-emperor u_unifrac_rarefied_${freq.simpleName}.PCoAResults.qzv \
			--o-weighted-unifrac-distance-matrix unifrac_rarefied_${freq.simpleName}.DistanceMatrix.qza \
			--o-weighted-unifrac-pcoa-results unifrac_rarefied_${freq.simpleName}.PCoAResults.qza \
			--o-weighted-unifrac-emperor unifrac_rarefied_${freq.simpleName}.PCoAResults.qzv
		
		qiime feature-table relative-frequency \
			--i-table ${freq} \
			--o-relative-frequency-table ${freq.simpleName}.FeatureTableRelativeFrequency.qza
		
		parallel " \
		qiime diversity pcoa-biplot \
			--i-pcoa {}${freq.simpleName}.PCoAResults.qza \
			--i-features ${freq.simpleName}.FeatureTableRelativeFrequency.qza \
			--o-biplot {}${freq.simpleName}.PCoAResults_biplot.qza \
			
		qiime qurro loading-plot \
			--i-ranks {}${freq.simpleName}.PCoAResults_biplot.qza \
			--i-table ${freq} \
			--m-sample-metadata-file ${METADATA} \
			--o-visualization {}${freq.simpleName}.PCoAResults_qurro.qzv

		qiime emperor plot \
			--i-pcoa {}${freq.simpleName}.PCoAResults_biplot.qza \
			--m-metadata-file ${METADATA} \
			--o-visualization {}${freq.simpleName}.PCoAResults_biplot.qzv \
		" ::: jaccard_rarefied_ b-c_rarefied_ u_unifrac_rarefied_ unifrac_rarefied_
		"""}

















process diversity_tax {
	publishDir path: DIR_div_alpha, mode: 'copy', pattern: '*SampleDataAlphaDiversity.qza'
	publishDir path: DIR_div_beta, mode: 'copy', pattern: '*DistanceMatrix.qza'
	publishDir path: DIR_div_beta_pcoa, mode: 'copy', pattern: '*PCoAResults.qza'
	publishDir path: DIR_div_beta_pcoa_bp, mode: 'copy', pattern: '*PCoAResults_biplot.qza'
	publishDir path: DIR_div_beta_pcoa_vis, mode: 'copy', pattern: '*PCoAResults.qzv'
	publishDir path: DIR_div_beta_pcoa_bp_vis, mode: 'copy', pattern: '*PCoAResults_biplot.qzv'
	publishDir path: DIR_div_temp, mode: 'copy', pattern: '{rarefied_*FeatureTableFrequency.qza,*FeatureTableRelativeFrequency.qza}'
	
	input:
		file freq_tax from tax_for_div

	output:
		file '*SampleDataAlphaDiversity.qza' into alpha_tax
		file '*DistanceMatrix.qza' into dist_tax
		file '*PCoAResults.qza'
		file '*PCoAResults.qzv'
		file '*PCoAResults_biplot.qza'
		file '*PCoAResults_biplot.qzv'
		file '*FeatureTableRelativeFrequency.qza'
		file 'rarefied_*FeatureTableFrequency.qza'

		"""
		qiime diversity core-metrics \
			--i-table ${freq} \
			--p-sampling-depth ${diversity_std_sampling_depth} \
			--m-metadata-file ${METADATA} \
			--p-n-jobs ${diversity_std_threads} \
			--o-rarefied-table rarefied_${freq.simpleName}.FeatureTableFrequency.qza \
			--o-observed-features-vector of_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-shannon-vector shannon_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-evenness-vector evenness_rarefied_${freq.simpleName}.SampleDataAlphaDiversity.qza \
			--o-jaccard-distance-matrix jaccard_rarefied_${freq.simpleName}.DistanceMatrix.qza \
			--o-jaccard-pcoa-results jaccard_rarefied_${freq.simpleName}.PCoAResults.qza \
			--o-jaccard-emperor jaccard_rarefied_${freq.simpleName}.PCoAResults.qzv \
			--o-bray-curtis-distance-matrix b-c_rarefied_${freq.simpleName}.DistanceMatrix.qza \
			--o-bray-curtis-pcoa-results b-c_rarefied_${freq.simpleName}.PCoAResults.qza \
			--o-bray-curtis-emperor b-c_rarefied_${freq.simpleName}.PCoAResults.qzv
		
		qiime feature-table relative-frequency \
			--i-table ${freq} \
			--o-relative-frequency-table ${freq.simpleName}.FeatureTableRelativeFrequency.qza
		
		parallel " \
		qiime diversity pcoa-biplot \
			--i-pcoa {}${freq.simpleName}.PCoAResults.qza \
			--i-features ${freq.simpleName}.FeatureTableRelativeFrequency.qza \
			--o-biplot {}${freq.simpleName}.PCoAResults_biplot.qza \
			
		qiime qurro loading-plot \
			--i-ranks {}${freq.simpleName}.PCoAResults_biplot.qza \
			--i-table ${freq} \
			--m-sample-metadata-file ${METADATA} \
			--o-visualization {}${freq.simpleName}.PCoAResults_qurro.qzv

		qiime emperor plot \
			--i-pcoa {}${freq.simpleName}.PCoAResults_biplot.qza \
			--m-metadata-file ${METADATA} \
			--o-visualization {}${freq.simpleName}.PCoAResults_biplot.qzv \
		" ::: jaccard_rarefied_ b-c_rarefied_
		"""}





















//alpha_comp.concat(alpha_std).flatten().view()


process alpha_stat {
	publishDir path: DIR_div_alpha_vis, mode: 'copy'
	
	input:
		file alpha from alpha_comp.concat(alpha_std, alpha_tax).flatten()

	output:
		file '*SampleDataAlphaDiversity.qzv'

		"""
		qiime diversity alpha-group-significance \
			--i-alpha-diversity ${alpha} \
			--m-metadata-file ${METADATA} \
			--o-visualization ${alpha.simpleName}.SampleDataAlphaDiversity.qzv

		qiime diversity alpha-correlation \
			--i-alpha-diversity ${alpha} \
			--m-metadata-file ${METADATA} \
			--o-visualization corr_${alpha.simpleName}.SampleDataAlphaDiversity.qzv
		"""}












// for non-heme_fe_faces_mg_fe_kg remove - B1, B6, C5, C6, D5, E3, E5, F6
// for ret_k_uL ret-he_pg rbc-he_pg remove - A1
// write on qiime forum about hacky metadata method

// group	non-heme_fe_faces_mg_fe_kg	non-heme_fe_liver_mg_fe_kg	rbc_m_uL	hgb_g_dL	mcv_fL	mch_pg	ret_k_uL	plt_k_uL	ret-he_pg	rbc-he_pg	plasma_iron_ug_dl
//group+heme_fe_faces_mg_fe_kg
//group+non-heme_fe_liver_mg_fe_kg
//group+plasma_iron_ug_dl

// jeśli chodzi o modele, to sprawdźmy wszystkie convariates oddzielnie oraz group+każdy z covariates

// Tutaj może trzeba będzie wyrzucić próbkę, żeby był bardziej balanced design. The sample to remove should be most distanced from rest of samples of this group

//dist_comp.concat(dist_std).flatten().view()

beta_stat_col = "non-heme_fe_liver_mg_fe_kg rbc_m_uL hgb_g_dL mcv_fL mch_pg plt_k_uL plasma_iron_ug_dl"

process beta_stat {
	publishDir path: DIR_div_beta_corr, mode: 'copy', pattern: 'corr_*qza'
	publishDir path: DIR_div_beta_stat_adonis, mode: 'copy', pattern: '*adonis*'
	publishDir path: DIR_div_beta_stat_permdisp, mode: 'copy', pattern: '*permdisp*'
	publishDir path: DIR_div_beta_stat_corr, mode: 'copy', pattern: 'corr_*qzv'
	
	input:
		file dist from dist_comp.concat(dist_std, dist_tax).flatten()

	output:
		tuple file('*DistanceMatrix.qzv'), file ('*DistanceMatrix.qza')

		"""
		parallel " \
		qiime diversity adonis  \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--p-formula {} \
			--o-visualization {}_adonis_${dist.simpleName}.DistanceMatrix.qzv
		" ::: ${FORMULAS}
		
		
		
		parallel " \
		qiime diversity beta-group-significance  \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--m-metadata-column {} \
			--p-method 'permdisp' \
			--o-visualization {}_permdisp_${dist.simpleName}.DistanceMatrix.qzv \
		" ::: ${CAT_COLS}
		
			
		
		parallel " \
		qiime diversity beta-correlation \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--m-metadata-column {} \
			--o-metadata-distance-matrix corr_{}_${dist.simpleName}.DistanceMatrix.qza \
			--o-mantel-scatter-visualization corr_{}_${dist.simpleName}.DistanceMatrix.qzv \
		" ::: ${beta_stat_col}
		
		
		
		qiime diversity filter-distance-matrix \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--p-where "[sampleid]='B1'" \
			--p-exclude-ids True \
			--o-filtered-distance-matrix B1_${dist.simpleName}.ass.qza
		
		sed '/^B1/d' ${METADATA} > B1_metadata		
		
		qiime diversity beta-correlation \
			--i-distance-matrix B1_${dist.simpleName}.ass.qza \
			--m-metadata-file B1_metadata \
			--m-metadata-column non-heme_fe_faces_mg_fe_kg \
			--o-metadata-distance-matrix corr_non-heme_fe_faces_mg_fe_kg_${dist.simpleName}.DistanceMatrix.qza \
			--o-mantel-scatter-visualization corr_non-heme_fe_faces_mg_fe_kg_${dist.simpleName}.DistanceMatrix.qzv
		
		
		
		qiime diversity filter-distance-matrix \
			--i-distance-matrix ${dist} \
			--m-metadata-file ${METADATA} \
			--p-where "[sampleid]='A1'" \
			--p-exclude-ids True \
			--o-filtered-distance-matrix A1_${dist.simpleName}.ass.qza
		
		sed '/^A1/d' ${METADATA} > A1_metadata
		
		parallel " \
		qiime diversity beta-correlation \
			--i-distance-matrix A1_${dist.simpleName}.ass.qza \
			--m-metadata-file A1_metadata \
			--m-metadata-column {} \
			--o-metadata-distance-matrix corr_{}_${dist.simpleName}.DistanceMatrix.qza \
			--o-mantel-scatter-visualization corr_{}_${dist.simpleName}.DistanceMatrix.qzv \
		" ::: ret_k_uL ret-he_pg rbc-he_pg
		
		
		

		"""}


























/// change folder to its own
filt_for_diff.concat(tax_for_diff).flatten().filter( ~/.*Frequency.*/ //).into{ diff; diff_filt_sepp }	
/*
process gneiss {
	publishDir path: DIR_diff_gneiss_cor, mode: 'copy', pattern: '*qza'
	publishDir path: DIR_diff_gneiss_cor_vis, mode: 'copy', pattern: '*qzv'
	
	maxForks 2
	
	input:
		file(freq) from diff

	output:
		file 'corr_*.Hierarchy.qza'

		"""
		qiime gneiss correlation-clustering \
			--i-table ${freq} \
			--p-pseudocount 0.5 \
			--o-clustering corr_${freq.simpleName}.Hierarchy.qza
		
		parallel " \
		qiime gneiss dendrogram-heatmap \
			--i-table ${freq} \
			--i-tree corr_${freq.simpleName}.Hierarchy.qza \
			--m-metadata-file ${METADATA} \
			--m-metadata-column {} \
			--p-color-map seismic \
			--o-visualization {}_corr_${freq.simpleName}.Hierarchy.qzv \
		" ::: ${CAT_COLS}
		"""}










diff_filt_sepp.filter( ~/.*\/filtered_sepp.*/ //).into{ diff_filt_sepp_dada2; diff_filt_sepp_deblur; diff_filt_sepp_deblur_s }
//diff_filt_sepp_dada2.filter( ~/.*dada2.*/ ).set{ diff_filt_sepp_dada2 }
//diff_filt_sepp_deblur.filter( ~/.*deblur\..*/ ).set{ diff_filt_sepp_deblur }
//diff_filt_sepp_deblur_s.filter( ~/.*deblur_single.*/ ).set{ diff_filt_sepp_deblur_s }


//phylogeny_for_diff.into{ phyl_diff_dada2; phyl_diff_deblur; phyl_diff_deblur_s }
//phyl_diff_dada2.filter( ~/.*dada2.*/ ).set{ phyl_diff_dada2 }
//phyl_diff_deblur.filter( ~/.*deblur\..*/ ).set{ phyl_diff_deblur }
//phyl_diff_deblur_s.filter( ~/.*deblur_single.*/ ).set{ phyl_diff_deblur_s }

//diff_filt_sepp_dada2.combine(phyl_diff_dada2).concat(diff_filt_sepp_deblur.combine(phyl_diff_deblur), diff_filt_sepp_deblur_s.combine(phyl_diff_deblur_s)).flatten().collate(2).view()
/*
process gneiss_phyl {
	publishDir path: DIR_diff_gneiss_phyl, mode: 'copy', pattern: '*qza'
	publishDir path: DIR_diff_gneiss_phyl_vis, mode: 'copy', pattern: '*qzv'
	
	maxForks 2
	
	input:
		tuple file(freq), file(phyl) from diff_filt_sepp_dada2.combine(phyl_diff_dada2).concat(diff_filt_sepp_deblur.combine(phyl_diff_deblur), diff_filt_sepp_deblur_s.combine(phyl_diff_deblur_s)).flatten().collate(2)

	output:
		tuple file('phyl_*.FeatureTableBalance.qza'), file('phyl_*.Hierarchy.qza') 

		"""
		qiime gneiss ilr-phylogenetic \
			--i-table ${freq} \
			--i-tree ${phyl} \
			--p-pseudocount 0.5 \
			--o-balances phyl_${freq.simpleName}.FeatureTableBalance.qza \
			--o-hierarchy phyl_${freq.simpleName}.Hierarchy.qza
			
		parallel " \
		qiime gneiss dendrogram-heatmap \
			--i-table ${freq} \
			--i-tree phyl_${freq.simpleName}.Hierarchy.qza \
			--m-metadata-file ${METADATA} \
			--m-metadata-column {} \
			--p-color-map seismic \
			--o-visualization {}_phyl_${freq.simpleName}.Hierarchy.qzv \
		" ::: ${CAT_COLS}
		"""}


























//phyl_freq.toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten().view()
//filt_for_corn.flatten().filter( ~/.*Frequency.*/ //).toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten().view()
/*
corncob_variables = 'group'

process corncob {
	publishDir path: DIR_diff_corn, mode: 'copy'
	
	input:
//		file freq from filt_for_corn.flatten().filter( ~/.*Frequency.*/ ///////////).toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten()
/*		file tax from phyl_freq.toSortedList( { a, b -> a.simpleName <=> b.simpleName } ).flatten()

	output:
		tuple file('phyl_*.FeatureTableBalance.qza'), file('phyl_*.Hierarchy.qza') 

		"""
		parallel " \
		qiime corncob differentialtest \
			--i-table ${freq} \
			--m-metadata-file ${METADATA} \
			--p-variable {} \
			--i-taxonomy ${tax} \
			--o-output {}_${freq.simpleName}.corncob.qza \
		" ::: ${corncob_variables}
		"""}

*/













